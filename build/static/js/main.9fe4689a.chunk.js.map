{"version":3,"sources":["axios.js","Row.js","requests.js","Nav.js","Banner.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchURL","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","key","id","onClick","movieTrailer","then","url","UrlParams","URLSearchParams","URL","search","catch","console","log","handleClick","src","poster_path","backdrop_path","alt","name","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanticMovies","fetchDocumentaries","Nav","show","handleShow","window","addEventListener","scrollY","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","App","RootEl","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.9fe4689a.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios.js\";\r\nimport \"./Row.css\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport YouTube from \"react-youtube\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchURL, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // [] run once when the orw loads and don't run again\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchURL);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchURL]);\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.title || \"\").then((url) => {\r\n        const UrlParams = new URLSearchParams(new URL(url).search);\r\n        setTrailerUrl(UrlParams.get(\"v\")).catch((url) => console.log(url));\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n\r\n      <div className=\"row_posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n            src={`${base_url}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","const API_KEY = \"a56ccd7203c277c77d672e65b5a3b25f\";\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanticMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\nexport default requests;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n  const [show, handleShow] = useState([]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      window.scrollY > 100 ? handleShow(true) : handleShow(false);\r\n    });\r\n    return () => {\r\n      window.addEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav_black\"}`}>\r\n      <img\r\n        className=\"nav__logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/250px-Netflix_2015_logo.svg.png\"\r\n        alt=\"Netflix logo\"\r\n      />\r\n      <img\r\n        className=\"nav__avatar\"\r\n        src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/366be133850498.56ba69ac36858.png\"\r\n        alt=\"Netflix avatar\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./requests\";\r\nimport \"./Banner.css\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  console.log(movie);\r\n\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\r\n      https://image.tmdb.org/t/p/original/${movie?.backdrop_path})`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner_contents\">\r\n        <h1 className=\"banner_title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n        <div className=\"banner_buttons\">\r\n          <button className=\"banner_button\">Play</button>\r\n          <button className=\"banner_button\">My list</button>\r\n        </div>\r\n        <h1 className=\"banner_description\">{truncate(movie?.overview, 150)}</h1>\r\n      </div>\r\n      <div className=\"banner--fadeBottom\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React from \"react\";\r\nimport Row from \"./Row.js\";\r\nimport requests from \"./requests\";\r\nimport Nav from \"./Nav\";\r\nimport Banner from \"./Banner\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Nav />\r\n\r\n      <Banner />\r\n\r\n      <Row\r\n        title=\"NETFLIX ORIGINALS\"\r\n        fetchURL={requests.fetchNetflixOriginals}\r\n        isLargeRow={true}\r\n      />\r\n      <Row title=\"Trending Now\" fetchURL={requests.fetchTrending} />\r\n      <Row title=\"Top Rated\" fetchURL={requests.fetchTopRated} />\r\n      <Row title=\"Action Movies\" fetchURL={requests.fetchActionMovies} />\r\n      <Row title=\"Comedy Movies\" fetchURL={requests.fetchComedyMovies} />\r\n      <Row title=\"Romance Movies\" fetchURL={requests.fetchRomanticMovies} />\r\n      <Row title=\"Horror Movies\" fetchURL={requests.fetchHorrorMovies} />\r\n      <Row title=\"Documentaries\" fetchURL={requests.fetchDocumentaries} />\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nconst RootEl = document.getElementById(\"root\");\r\n\r\nReactDOM.render(<App />, RootEl);\r\n"],"sourceRoot":""}